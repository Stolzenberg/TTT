@namespace Mountain
@using System
@inherits PanelComponent

<root>
    <div class="lower-left-box">
        <div class="card" style="background-color: @Client.Local.PlayerColor.WithAlpha(0.2f).ToString();">
            <div class="text">#@Client.Local.Team.ToString().ToUpper()</div>
        </div>
    </div>
    
    <div class="lower-center-box">
        <div class="state-text @GetTimeTextClass()">@GetFormattedState()</div>
        <div class="time-text @GetTimeTextClass()">@GetFormattedTime()</div>
    </div>
</root>

@code
{
    protected override int BuildHash()
    {
        return HashCode.Combine(GameMode.Instance.StateMachine.CurrentState?.RemainingDuration, Client.Local.Team, Client.Local.PlayerColor);
    }

    private string GetFormattedState()
    {
        if (GameMode.Instance.StateMachine.CurrentState != null && 
            !new[] { "Playing, Preparing" }.Contains(GameMode.Instance.StateMachine.CurrentState.GameObject.Name))
            return "";
        
        var state = GameMode.Instance.StateMachine.CurrentState;
        if (state == null)
            return "#WAITING_FOR_PLAYERS";

        return "#" + state.GameObject.Name.ToUpper().Replace("_", " ");
    }
    
    private string GetFormattedTime()
    {
        if (GameMode.Instance.StateMachine.CurrentState != null && 
            !GameMode.Instance.StateMachine.CurrentState.GameObject.Name.Contains("Playing"))
            return "";
        
        var remainingDuration = GameMode.Instance.StateMachine.CurrentState?.RemainingDuration;
        if (remainingDuration == null)
            return "00:00";

        var totalSeconds = (int)Math.Ceiling(remainingDuration.Value);
        
        if (totalSeconds < 60)
        {
            return totalSeconds.ToString("00");
        }

        var minutes = totalSeconds / 60;
        var seconds = totalSeconds % 60;
        return $"{minutes:00}:{seconds:00}";
    }

    private string GetTimeTextClass()
    {
        if (GameMode.Instance.StateMachine.CurrentState != null && 
            !GameMode.Instance.StateMachine.CurrentState.GameObject.Name.Contains("Playing"))
            return "";
        
        var remainingDuration = GameMode.Instance.StateMachine.CurrentState?.RemainingDuration;
        if (remainingDuration == null)
            return "";

        var totalSeconds = (int)Math.Ceiling(remainingDuration.Value);
        
        return totalSeconds < 20 ? "time-urgent" : "";
    }
}