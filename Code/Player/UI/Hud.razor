@namespace Mountain
@inherits PanelComponent

@if (!Client.Viewer.IsValid())
{
    return;
}

@if (!Client.Viewer.Player.IsValid())
{
    return;
}

<root>
    <div class="upper-right-box">
        <div class="card blur">
            <div class="player-currency-text">$ @Client.Viewer.Currency</div>
        </div>
    </div>

    <div class="lower-left-box">
        @if (Client.Viewer.IsLocalClient)
        {
            <div class="card blur" style="background-color: @Client.Local.TeamColor.WithAlpha(0.2f).ToString();">
                <div class="text">#@Client.Local.Team.ToString().ToUpper()</div>
            </div>
        }
        else
        {
            <div class="card blur">
                <div class="text">@Client.Viewer.DisplayName</div>
            </div>
        }

        <div class="health-bar rounded blur">
            <div class="health-fill" style="width: @(GetHealthPercentage())%;"></div>
            <div class="health-text">#HEALTH @GetHealthDisplay()%</div>
        </div>
    </div>

    <div class="lower-center-box">
        <div class="state-text @GetTimeTextClass()">@GetFormattedState()</div>
        <div class="time-text @GetTimeTextClass()">@GetFormattedTime()</div>
    </div>

    <div class="notifications">
        @foreach (var notification in Notifications)
        {
            <div class="notification @(notification.Type.ToString().ToLower()) rounded blur fading-out">
                <p>@notification.Message</p>
            </div>
        }
    </div>

    <div class="lower-right-box">
        @if (Ammo.IsValid() && ActiveEquipment.IsValid())
        {
            <div class="card blur">
                <div class="weapon-ammo-text">@Ammo.Ammo</div>
                <div class="player-ammo-text">+@Client.Viewer.Player.GetAmmo(ActiveEquipment.Resource.AmmoType)</div>
            </div>
        }
    </div>
</root>